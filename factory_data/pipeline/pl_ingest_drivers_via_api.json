{
	"name": "pl_ingest_drivers_via_api",
	"properties": {
		"activities": [
			{
				"name": "act_cpy_drivers",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "act_log_insert_drivers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_api_source",
						"type": "DatasetReference",
						"parameters": {
							"ds_param_file_name": {
								"value": "@pipeline().parameters.pl_param_file_name",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_sink_json",
						"type": "DatasetReference",
						"parameters": {
							"ds_param_file_name": {
								"value": "@concat(pipeline().parameters.pl_param_file_name,'.json')",
								"type": "Expression"
							},
							"ds_param_directory_path": {
								"value": "@concat(concat(concat('bronze/',pipeline().parameters.pl_param_file_name),'/'),formatDateTime(utcnow(),'yyyy-MM-dd'))",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "act_look_up_on_drivers",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_log_update_completion_drivers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_sink_json",
						"type": "DatasetReference",
						"parameters": {
							"ds_param_file_name": {
								"value": "@concat(pipeline().parameters.pl_param_file_name,'.json')",
								"type": "Expression"
							},
							"ds_param_directory_path": {
								"value": "@concat(concat(concat('bronze/',pipeline().parameters.pl_param_file_name),'/'),formatDateTime(utcnow(),'yyyy-MM-dd'))",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_log_insert_drivers",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "insert into public.audit_log (job_name,task_name,status,start_date,end_date) values ('@{pipeline().parameters.pl_param_file_name}','copy_act','In Progress','@{convertFromUtc(utcnow(),'India Standard Time')}','@{convertFromUtc(utcnow(),'India Standard Time')}');\n\nselect * from public.audit_log;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_postgres",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_log_update_completion_drivers",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_cpy_drivers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "update public.audit_log\nset status='completed', \nend_date = start_date + interval '@{activity('act_cpy_drivers').output.copyDuration} seconds'\nwhere job_name = '@{pipeline().parameters.pl_param_file_name}';\n\n\nselect * from public.audit_log;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_postgres",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_log_update_failed_drivers",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_cpy_drivers",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "update public.audit_log\nset status='failed', \nend_date = start_date + interval '@{activity('act_cpy_drivers').output.copyDuration} seconds'\nwhere job_name = '@{pipeline().parameters.pl_param_file_name}';\n\n\nselect * from public.audit_log;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_postgres",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"pl_param_file_name": {
				"type": "string"
			}
		},
		"annotations": []
	}
}